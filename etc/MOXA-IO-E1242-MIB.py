#
# PySNMP MIB module MOXA-IO-E1242-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///usr/share/snmp/mibs/moxa-e1242-v1.2.mib
# Produced by pysmi-1.1.12 at Mon Oct  7 02:18:31 2024
# On host admin platform Linux version 5.15.0-89-generic by user root
# Using Python version 3.10.12 (main, Sep 11 2024, 15:47:36) [GCC 11.4.0]
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ConstraintsUnion, ValueRangeConstraint, ConstraintsIntersection, SingleValueConstraint, ValueSizeConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsUnion", "ValueRangeConstraint", "ConstraintsIntersection", "SingleValueConstraint", "ValueSizeConstraint")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
iso, Gauge32, NotificationType, MibIdentifier, Bits, IpAddress, ModuleIdentity, TimeTicks, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, Integer32, enterprises, Counter32, Unsigned32, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "iso", "Gauge32", "NotificationType", "MibIdentifier", "Bits", "IpAddress", "ModuleIdentity", "TimeTicks", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "Integer32", "enterprises", "Counter32", "Unsigned32", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
e1242 = ModuleIdentity((1, 3, 6, 1, 4, 1, 8691, 10, 1242))
e1242.setRevisions(('2016-09-06 11:00', '2016-07-28 14:00', '2016-04-06 13:00', '2016-01-14 09:00', '2016-01-04 13:00', '2015-12-04 16:00', '2013-02-21 14:00',))
if mibBuilder.loadTexts: e1242.setLastUpdated('201609061100Z')
if mibBuilder.loadTexts: e1242.setOrganization('Moxa Automation,Inc.')
moxa = MibIdentifier((1, 3, 6, 1, 4, 1, 8691))
ioLogik = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10))
totalChannelNumber = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: totalChannelNumber.setStatus('current')
serverModel = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 2), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: serverModel.setStatus('current')
systemTime = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 3), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: systemTime.setStatus('current')
firmwareVersion = MibScalar((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 4), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: firmwareVersion.setStatus('current')
e1242monitor = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10))
diTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1), )
if mibBuilder.loadTexts: diTable.setStatus('current')
diEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1), ).setIndexNames((0, "MOXA-IO-E1242-MIB", "diIndex"))
if mibBuilder.loadTexts: diEntry.setStatus('current')
diIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diIndex.setStatus('current')
diMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diMode.setStatus('current')
diStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diStatus.setStatus('current')
diFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diFilter.setStatus('current')
diTrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diTrigger.setStatus('current')
diCntStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diCntStart.setStatus('current')
diCounterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diCounterReset.setStatus('current')
diCounterOverflowFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: diCounterOverflowFlag.setStatus('current')
diCounterOverflowFlagClear = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 1, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: diCounterOverflowFlagClear.setStatus('current')
dioTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3), )
if mibBuilder.loadTexts: dioTable.setStatus('current')
dioEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1), ).setIndexNames((0, "MOXA-IO-E1242-MIB", "dioIndex"))
if mibBuilder.loadTexts: dioEntry.setStatus('current')
dioIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dioIndex.setStatus('current')
dioType = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dioType.setStatus('current')
dioMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioMode.setStatus('current')
dioStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioStatus.setStatus('current')
dioDIFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDIFilter.setStatus('current')
dioDITrigger = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDITrigger.setStatus('current')
dioDICntStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 7), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDICntStart.setStatus('current')
dioDOPulseONWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDOPulseONWidth.setStatus('current')
dioDOPulseOFFWidth = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDOPulseOFFWidth.setStatus('current')
dioDOPulseStart = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDOPulseStart.setStatus('current')
dioDICounterReset = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDICounterReset.setStatus('current')
dioDICounterOverflowFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readonly")
if mibBuilder.loadTexts: dioDICounterOverflowFlag.setStatus('current')
dioDICounterOverflowFlagClear = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 3, 1, 13), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: dioDICounterOverflowFlagClear.setStatus('current')
aiTable = MibTable((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4), )
if mibBuilder.loadTexts: aiTable.setStatus('current')
aiEntry = MibTableRow((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1), ).setIndexNames((0, "MOXA-IO-E1242-MIB", "aiIndex"))
if mibBuilder.loadTexts: aiEntry.setStatus('current')
aiIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiIndex.setStatus('current')
aiEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiEnable.setStatus('current')
aiMode = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiMode.setStatus('current')
aiValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiValue.setStatus('current')
aiMin = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiMin.setStatus('current')
aiMax = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiMax.setStatus('current')
aiValueScaled = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 7), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiValueScaled.setStatus('current')
aiValueScaledMin = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 8), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiValueScaledMin.setStatus('current')
aiValueScaledMax = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 9), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiValueScaledMax.setStatus('current')
aiResetMinValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiResetMinValue.setStatus('current')
aiResetMaxValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aiResetMaxValue.setStatus('current')
aiStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 3))).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiStatus.setStatus('current')
aiBurnoutValue = MibTableColumn((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 10, 4, 1, 13), OctetString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aiBurnoutValue.setStatus('current')
diTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20))
diTrap0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 1))
if mibBuilder.loadTexts: diTrap0.setStatus('current')
diTrap1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 2))
if mibBuilder.loadTexts: diTrap1.setStatus('current')
diTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 3))
if mibBuilder.loadTexts: diTrap2.setStatus('current')
diTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 4))
if mibBuilder.loadTexts: diTrap3.setStatus('current')
diTrap4 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 5))
if mibBuilder.loadTexts: diTrap4.setStatus('current')
diTrap5 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 6))
if mibBuilder.loadTexts: diTrap5.setStatus('current')
diTrap6 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 7))
if mibBuilder.loadTexts: diTrap6.setStatus('current')
diTrap7 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 20, 8))
if mibBuilder.loadTexts: diTrap7.setStatus('current')
doTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 21))
doTrap0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 21, 1))
if mibBuilder.loadTexts: doTrap0.setStatus('current')
doTrap1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 21, 2))
if mibBuilder.loadTexts: doTrap1.setStatus('current')
doTrap2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 21, 3))
if mibBuilder.loadTexts: doTrap2.setStatus('current')
doTrap3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 21, 4))
if mibBuilder.loadTexts: doTrap3.setStatus('current')
aiTrapGreater = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22))
aiTrapG0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22, 1))
if mibBuilder.loadTexts: aiTrapG0.setStatus('current')
aiTrapG1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22, 2))
if mibBuilder.loadTexts: aiTrapG1.setStatus('current')
aiTrapG2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22, 3))
if mibBuilder.loadTexts: aiTrapG2.setStatus('current')
aiTrapG3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 22, 4))
if mibBuilder.loadTexts: aiTrapG3.setStatus('current')
aiTrapSmaller = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23))
aiTrapS0 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23, 1))
if mibBuilder.loadTexts: aiTrapS0.setStatus('current')
aiTrapS1 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23, 2))
if mibBuilder.loadTexts: aiTrapS1.setStatus('current')
aiTrapS2 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23, 3))
if mibBuilder.loadTexts: aiTrapS2.setStatus('current')
aiTrapS3 = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 23, 4))
if mibBuilder.loadTexts: aiTrapS3.setStatus('current')
messageTrap = MibIdentifier((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 30))
activeMessageTrap = NotificationType((1, 3, 6, 1, 4, 1, 8691, 10, 1242, 30, 1))
if mibBuilder.loadTexts: activeMessageTrap.setStatus('current')
mibBuilder.exportSymbols("MOXA-IO-E1242-MIB", dioDICntStart=dioDICntStart, aiIndex=aiIndex, aiTrapSmaller=aiTrapSmaller, aiTrapS1=aiTrapS1, aiValueScaled=aiValueScaled, activeMessageTrap=activeMessageTrap, diFilter=diFilter, diStatus=diStatus, aiTrapG1=aiTrapG1, dioDICounterOverflowFlag=dioDICounterOverflowFlag, dioDIFilter=dioDIFilter, aiMode=aiMode, diTrap0=diTrap0, aiTrapG0=aiTrapG0, dioDOPulseOFFWidth=dioDOPulseOFFWidth, aiTrapGreater=aiTrapGreater, aiEntry=aiEntry, dioDICounterReset=dioDICounterReset, systemTime=systemTime, diTrigger=diTrigger, e1242=e1242, dioDICounterOverflowFlagClear=dioDICounterOverflowFlagClear, aiValue=aiValue, dioDOPulseONWidth=dioDOPulseONWidth, diTable=diTable, totalChannelNumber=totalChannelNumber, PYSNMP_MODULE_ID=e1242, diCntStart=diCntStart, aiBurnoutValue=aiBurnoutValue, diTrap1=diTrap1, doTrap=doTrap, aiTrapS0=aiTrapS0, doTrap1=doTrap1, diMode=diMode, dioDOPulseStart=dioDOPulseStart, diTrap6=diTrap6, aiTrapS2=aiTrapS2, aiTrapG3=aiTrapG3, diTrap7=diTrap7, messageTrap=messageTrap, diCounterReset=diCounterReset, dioStatus=dioStatus, diTrap5=diTrap5, diCounterOverflowFlagClear=diCounterOverflowFlagClear, aiMin=aiMin, dioTable=dioTable, aiMax=aiMax, diTrap=diTrap, aiTable=aiTable, diTrap3=diTrap3, diCounterOverflowFlag=diCounterOverflowFlag, diTrap2=diTrap2, aiTrapG2=aiTrapG2, aiTrapS3=aiTrapS3, firmwareVersion=firmwareVersion, ioLogik=ioLogik, dioDITrigger=dioDITrigger, aiResetMaxValue=aiResetMaxValue, aiStatus=aiStatus, dioIndex=dioIndex, diTrap4=diTrap4, aiResetMinValue=aiResetMinValue, diEntry=diEntry, moxa=moxa, doTrap2=doTrap2, doTrap3=doTrap3, aiValueScaledMin=aiValueScaledMin, dioType=dioType, aiEnable=aiEnable, e1242monitor=e1242monitor, dioMode=dioMode, dioEntry=dioEntry, serverModel=serverModel, doTrap0=doTrap0, aiValueScaledMax=aiValueScaledMax, diIndex=diIndex)
